{
  "permissions": {
    "allow": [
      "Bash(cmake:*)",
      "Bash(../TestPaintProducesAudio_artefacts/RelWithDebInfo/TestPaintProducesAudio.exe)",
      "Bash(\"./SpectralCanvas Pro.exe\")",
      "Bash(powershell:*)",
      "Bash(grep:*)",
      "Bash(dir:*)",
      "Bash(\"C:\\ARTEFACT_Production\\build\\SpectralCanvas_artefacts\\RelWithDebInfo\\Standalone\\SpectralCanvas Pro.exe\")",
      "Bash(ctest:*)",
      "Bash(\"C:\\ARTEFACT_Production\\build\\SpectralCoreTests_artefacts\\RelWithDebInfo\\SpectralCoreTests.exe\")",
      "Bash(make:*)",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"Get-Content .claude\\settings.json | ConvertFrom-Json | ConvertTo-Json -Depth 10\")",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"if (-not (Test-Path ''C:\\temp'')) { New-Item -ItemType Directory -Path ''C:\\temp'' }; if (Test-Path ''C:\\temp\\spectral_debug.log'') { Write-Host ''Log exists - last 5 lines:''; Get-Content ''C:\\temp\\spectral_debug.log'' -Tail 5 } else { Write-Host ''No log file found at C:\\temp\\spectral_debug.log'' }\")",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"Get-ChildItem -Path ''C:\\ARTEFACT_Production\\build'' -Recurse -Include ''*.exe'', ''*.vst3'', ''*.dll'' | Select-Object FullName\")",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"Select-String -Path ''C:\\ARTEFACT_Production\\Source\\Core\\PluginProcessor.cpp'' -Pattern ''^}$'' -AllMatches | Select-Object -First 20 LineNumber\")",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"Get-ChildItem -Path ''C:\\ARTEFACT_Production\\build'' -Recurse -Include ''*.exe'', ''*.vst3'' | Where-Object { $_LastWriteTime -gt (Get-Date).AddMinutes(-2) } | Select-Object FullName, LastWriteTime\")",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"Get-ChildItem -Path ''C:\\ARTEFACT_Production\\build'' -Recurse -Name ''*.vst3''\")",
      "Bash(mkdir:*)",
      "Bash(cp:*)",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"Copy-Item ''C:\\ARTEFACT_Production\\_archive\\ghost_code_cleanup_20250816_204913\\Source\\Core\\RealtimeSafeAssertions.h'' ''C:\\ARTEFACT_Production\\Source\\Core\\RealtimeSafeAssertions.h''\")",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"Get-ChildItem -Path ''C:\\ARTEFACT_Production\\build'' -Recurse -Include ''*.exe'' | Select-Object FullName\")",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"Get-Content ''Source\\Core\\PluginProcessor.cpp'' | Select-String -Pattern ''^(void|bool|int|float|double|auto|juce::)\\s+ARTEFACTAudioProcessor::'' | Select-Object -First 30\")",
      "Bash(python:*)",
      "Bash(cp:*)",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"Get-ChildItem -Path ''C:\\ARTEFACT_Production\\build\\SpectralCanvas_artefacts\\RelWithDebInfo'' -Recurse -Name\")",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"Get-ChildItem -Path ''C:\\ARTEFACT_Production\\build'' -Recurse -Include ''*.exe'', ''*.vst3'' | Where-Object { $_LastWriteTime -gt (Get-Date).AddMinutes(-2) } | Select-Object FullName, LastWriteTime\")",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"Get-Item ''C:\\ARTEFACT_Production\\build\\SpectralCanvas_artefacts\\RelWithDebInfo\\VST3\\SpectralCanvas Pro.vst3\\Contents\\x86_64-win\\SpectralCanvas Pro.vst3'' | Format-List Name, Length, LastWriteTime\")",
      "Bash(rm:*)",
      "Bash(mkdir:*)",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"Get-ChildItem -Path ''build\\SpectralCanvas_artefacts\\RelWithDebInfo'' -Recurse -Name\")",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"Get-ChildItem -Path ''build'' -Recurse -Include ''*.exe'', ''*.vst3'' | Where-Object { $_LastWriteTime -gt (Get-Date).AddMinutes(-5) } | Select-Object FullName, LastWriteTime\")",
      "Bash(timeout 30 cmake --build build --config RelWithDebInfo --target SpectralCanvas)",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"Get-ChildItem -Path ''C:\\ARTEFACT_Production\\build\\SpectralCanvas_artefacts\\RelWithDebInfo\\VST3\\'' -Recurse | Select-Object FullName\")",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"Get-Item ''C:\\ARTEFACT_Production\\build\\SpectralCanvas_artefacts\\RelWithDebInfo\\VST3\\SpectralCanvas Pro.vst3'' | Select-Object FullName, LastWriteTime, Length\")",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"Get-ChildItem -Path ''C:\\ARTEFACT_Production\\build'' -Recurse -Include ''*.exe'' | Where-Object { $_Name -like ''*SpectralCanvas*'' -or $_Name -like ''*Standalone*'' } | Select-Object FullName, LastWriteTime\")",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"Get-ChildItem -Path ''C:\\ARTEFACT_Production\\build'' -Recurse -Include ''*.exe'' | Where-Object { $_Name -match ''SpectralCanvas|Standalone'' } | Select-Object FullName, LastWriteTime\")",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"Get-ChildItem ''C:\\ARTEFACT_Production\\build'' -Recurse -Name ''*.exe''\")",
      "Bash(timeout 60 cmake --build build --config RelWithDebInfo --target SpectralCanvas)",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"Get-ChildItem -Path ''C:\\ARTEFACT_Production\\build'' -Recurse -Include ''*.exe'' | Where-Object { $_FullName -match ''Standalone'' } | Select-Object FullName, LastWriteTime\")",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"Copy-Item ''C:\\ARTEFACT_Production\\_archive\\ghost_code_cleanup_20250816_204913\\Source\\Core\\PaintEngine.cpp'' ''C:\\ARTEFACT_Production\\Source\\Core\\PaintEngine.cpp''\")",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"Copy-Item ''C:\\ARTEFACT_Production\\_archive\\ghost_code_cleanup_20250816_204913\\Source\\Core\\PaintEngine.h'' ''C:\\ARTEFACT_Production\\Source\\Core\\PaintEngine.h''\")",
      "Bash(find:*)",
      "Bash(rm:*)",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command '$exe = \"\"C:\\ARTEFACT_Production\\build\\SpectralCanvas_artefacts\\RelWithDebInfo\\Standalone\\SpectralCanvas Pro.exe\"\"; if (Test-Path $exe) { Write-Host \"\"EXISTS: $(Get-Item $exe | Select-Object Name,LastWriteTime)\"\"; Get-FileHash $exe | Select-Object Hash } else { Write-Host \"\"EXE NOT FOUND YET\"\" }')",
      "Bash(git reset:*)",
      "Bash(gh repo create:*)",
      "Bash(git config:*)",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"Get-ChildItem -Path ''C:\\ARTEFACT_Production\\build'' -Recurse -Include ''*.exe'', ''*.vst3'' | Where-Object { $_LastWriteTime -gt (Get-Date).AddMinutes(-2) } | Select-Object FullName, LastWriteTime\")",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"Get-ChildItem -Path ''C:\\ARTEFACT_Production\\build'' -Recurse -Include ''*.exe'', ''*.vst3'' | Select-Object FullName, LastWriteTime\")",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"Get-ChildItem -Path ''C:\\ARTEFACT_Production\\build\\SpectralCanvas_artefacts\\RelWithDebInfo'' -Name\")",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"Get-ChildItem -Path ''C:\\ARTEFACT_Production\\build'' -Recurse -Include ''SpectralCanvas*.exe'', ''SpectralCanvas*.vst3'' | Where-Object { $_LastWriteTime -gt (Get-Date).AddMinutes(-5) } | Select-Object FullName, LastWriteTime\")",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"Test-Path ''C:\\ARTEFACT_Production\\build\\SpectralCanvas_artefacts\\RelWithDebInfo\\Standalone\\SpectralCanvas Pro.exe''\")",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"Get-ChildItem -Path ''C:\\ARTEFACT_Production\\build'' -Recurse -Include ''*.exe'', ''*.vst3'' | Where-Object { $_LastWriteTime -gt (Get-Date).AddMinutes(-2) } | Select-Object FullName, LastWriteTime\")",
      "Bash(timeout 30 cmake --build build --config RelWithDebInfo --target SpectralCanvas_Standalone)",
      "Bash(move:*)",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"Move-Item ''C:\\ARTEFACT_Production\\Source\\GUI\\PaintCanvasComponent.cpp'' ''C:\\ARTEFACT_Production\\Source\\GUI\\PaintCanvasComponent.cpp.old''\")",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"Move-Item ''C:\\ARTEFACT_Production\\Source\\GUI\\PaintCanvasComponent.h'' ''C:\\ARTEFACT_Production\\Source\\GUI\\PaintCanvasComponent.h.old''\")",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"Get-ChildItem -Path ''C:\\ARTEFACT_Production\\build'' -Recurse -Include ''*.exe'', ''*.vst3'' | Where-Object { $_LastWriteTime -gt (Get-Date).AddMinutes(-2) } | Select-Object FullName, LastWriteTime\")",
      "WebSearch",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -NoProfile -ExecutionPolicy Bypass -Command \"Test-Path ''$env:USERPROFILE\\.claude\\hooks\\ntfy-notifier.ps1''\")",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"Copy-Item ''C:\\ARTEFACT_Production\\Source\\Core\\SpectralSynthEngine.h'' ''C:\\ARTEFACT_Production\\Source\\Core\\SpectralSynthEngine.h.comprehensive''\")",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"Copy-Item ''C:\\ARTEFACT_Production\\Source\\Core\\SpectralSynthEngine.cpp'' ''C:\\ARTEFACT_Production\\Source\\Core\\SpectralSynthEngine.cpp.comprehensive''\")",
      "Bash(pwsh:*)",
      "Bash(timeout 120 cmake --build build --config RelWithDebInfo --target SpectralCanvas)",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"Get-ChildItem -Path ''C:\\ARTEFACT_Production\\build'' -Recurse -Include ''*.exe'', ''*.vst3'' | Where-Object { $_astWriteTime -gt (Get-Date).AddMinutes(-2) } | Select-Object FullName, LastWriteTime\")",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"Get-ChildItem -Path ''C:\\ARTEFACT_Production\\build'' -Recurse -Include ''*.exe'', ''*.vst3'' | Select-Object FullName\")",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"Get-ChildItem -Path ''C:\\ARTEFACT_Production\\build\\SpectralCanvas_artefacts'' -Recurse | Select-Object FullName\")",
      "Bash(timeout 60 cmake --build build --config RelWithDebInfo --target ALL_BUILD)",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"Get-ChildItem -Path ''C:\\ARTEFACT_Production\\build\\SpectralCanvas_artefacts\\RelWithDebInfo'' -Recurse | Where-Object { $_Name -like ''*.exe'' -or $_Name -like ''*.vst3'' } | Select-Object FullName, LastWriteTime\")",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"Get-ChildItem -Path ''C:\\ARTEFACT_Production\\build\\SpectralCanvas_artefacts\\RelWithDebInfo'' -Recurse\")",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"Get-ChildItem -Path ''C:\\ARTEFACT_Production\\build'' -Recurse | Where-Object { $_ame -match ''vst3|exe'' -and $_ame -notmatch ''pdb|lib|cmake|compiler'' } | Select-Object FullName, LastWriteTime\")",
      "Bash(timeout 120 cmake --build build --config RelWithDebInfo --target SpectralCanvas_VST3)",
      "Bash(timeout 120 cmake --build build --config RelWithDebInfo --target SpectralCanvas_Standalone)",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"Get-ChildItem -Path ''build'' -Recurse -Include ''*.vst3'' | Select-Object FullName, LastWriteTime\")",
      "Bash(git add:*)",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"if (Test-Path ''build-juce8'') { Remove-Item ''build-juce8'' -Recurse -Force -ErrorAction SilentlyContinue }\")",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"if (Test-Path ''build-juce8'') { Remove-Item ''build-juce8'' -Recurse -Force }; if (Test-Path ''CMakeCache.txt'') { Remove-Item ''CMakeCache.txt'' }\")",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"Get-ChildItem -Path ''C:\\ARTEFACT_Production\\build'' -Recurse -Include ''*.exe'', ''*.vst3'' | Where-Object { $_LastWriteTime -gt (Get-Date).AddMinutes(-5) } | Select-Object FullName, LastWriteTime\")",
      "Bash(timeout 30 cmake --build build --config RelWithDebInfo --target TestPaintProducesAudio)",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"Get-ChildItem -Path ''C:\\ARTEFACT_Production\\build'' -Recurse -Include ''*.exe'' | Where-Object { $_ame -match ''render_test_input'' } | Select-Object FullName, LastWriteTime\")",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"Get-ChildItem -Path ''C:\\ARTEFACT_Production\\build'' -Recurse -Include ''*render_test_input*'' | Select-Object FullName, LastWriteTime\")",
      "Bash(\"C:\\ARTEFACT_Production\\build\\render_test_input_artefacts\\RelWithDebInfo\\render_test_input.exe\" \"C:\\ARTEFACT_Production\\build\\_deps\\juce-src\\examples\\Assets\\cassette_recorder.wav\" \"example_gestures.txt\" \"test_output.wav\")",
      "Bash(\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -Command \"Get-ChildItem -Path ''C:\\ARTEFACT_Production'' -Recurse -Include ''*.obj'' | Remove-Item -Force\")"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": [
      "C:\\c\\ARTEFACT_Production"
    ]
  }
}